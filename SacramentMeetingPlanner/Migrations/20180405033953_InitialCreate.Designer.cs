// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SacramentMeetingPlanner.Models;
using System;

namespace SacramentMeetingPlanner.Migrations
{
    [DbContext(typeof(SacramentMeetingPlannerContext))]
    [Migration("20180405033953_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Hymns", b =>
                {
                    b.Property<int>("HymnsID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClosingHymn")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ClosingNumber")
                        .HasColumnName("ClosingNumber");

                    b.Property<DateTime>("MeetingDate");

                    b.Property<int>("OpeningHyNumber")
                        .HasColumnName("OpeningHyNumber");

                    b.Property<string>("OpeningHymn")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SacrHyNumber")
                        .HasColumnName("SacrHyNumber");

                    b.Property<string>("SacramentHymn")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("SacramentID");

                    b.HasKey("HymnsID");

                    b.HasIndex("SacramentID");

                    b.ToTable("Hymns");
                });

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Prayers", b =>
                {
                    b.Property<int>("PrayersID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClosingPrayers")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("MeetingDate");

                    b.Property<string>("OpeningPrayers")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("SacramentID");

                    b.HasKey("PrayersID");

                    b.HasIndex("SacramentID");

                    b.ToTable("Prayers");
                });

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Sacrament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Conducting")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("MeetingDate");

                    b.Property<string>("Subjects")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Sacrament");
                });

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Speakers", b =>
                {
                    b.Property<int>("SpeakersID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("MeetingDate");

                    b.Property<int?>("SacramentID");

                    b.Property<string>("Speaker1")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Speaker2")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Speaker3")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("SpeakersID");

                    b.HasIndex("SacramentID");

                    b.ToTable("Speakers");
                });

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Hymns", b =>
                {
                    b.HasOne("SacramentMeetingPlanner.Models.Sacrament")
                        .WithMany("Hymns")
                        .HasForeignKey("SacramentID");
                });

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Prayers", b =>
                {
                    b.HasOne("SacramentMeetingPlanner.Models.Sacrament")
                        .WithMany("Prayers")
                        .HasForeignKey("SacramentID");
                });

            modelBuilder.Entity("SacramentMeetingPlanner.Models.Speakers", b =>
                {
                    b.HasOne("SacramentMeetingPlanner.Models.Sacrament")
                        .WithMany("Speakers")
                        .HasForeignKey("SacramentID");
                });
#pragma warning restore 612, 618
        }
    }
}
